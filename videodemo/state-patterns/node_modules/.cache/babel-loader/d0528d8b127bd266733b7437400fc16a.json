{"ast":null,"code":"var _jsxFileName = \"/Users/juancruz/Documents/Projects/SpringBoardDemoCode/react-state-patterns-demo/videodemo/state-patterns/src/ColoredCircles.js\";\nimport React, { useState } from \"react\";\nimport Circle from \"./Circle\";\nimport ColorButtons from \"./ColorButtons\";\n\nfunction getRandom(min = 0, max = 100) {\n  return Math.random() * (max - min) + min;\n}\n\nconst ColoredCircles = () => {\n  const [circles, setCircles] = useState([]);\n\n  const addCircle = color => {\n    setCircles(circles => [...circles, {\n      color,\n      x: getRandom(),\n      y: getRandom()\n    }]);\n  }; // const changePosition = idx => {\n  //   setCircles(circles => {\n  //     const copy = [...circles];\n  //     copy[idx].x = getRandom();\n  //     copy[idx].y = getRandom();\n  //     return copy;\n  //   })\n  // }\n\n\n  const changePosition = idx => {\n    setCircles(circles => circles.map((circle, i) => i === idx ? { ...circle,\n      x: getRandom(),\n      y: getRandom()\n    } : circle));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ColorButtons, {\n    addCircle: addCircle,\n    options: ['peachpuff', 'lightsteelblue', \"paleturquoise\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), circles.map(({\n    color,\n    x,\n    y\n  }, idx) => /*#__PURE__*/React.createElement(Circle, {\n    changePosition: changePosition,\n    color: color,\n    idx: idx,\n    key: idx,\n    x: x,\n    y: y,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ColoredCircles;","map":{"version":3,"sources":["/Users/juancruz/Documents/Projects/SpringBoardDemoCode/react-state-patterns-demo/videodemo/state-patterns/src/ColoredCircles.js"],"names":["React","useState","Circle","ColorButtons","getRandom","min","max","Math","random","ColoredCircles","circles","setCircles","addCircle","color","x","y","changePosition","idx","map","circle","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,SAASC,SAAT,CAAmBC,GAAG,GAAG,CAAzB,EAA4BC,GAAG,GAAG,GAAlC,EAAuC;AACrC,SAAOC,IAAI,CAACC,MAAL,MAAiBF,GAAG,GAAGD,GAAvB,IAA8BA,GAArC;AACD;;AAED,MAAMI,cAAc,GAAG,MAAM;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;;AACA,QAAMW,SAAS,GAAIC,KAAD,IAAW;AAC3BF,IAAAA,UAAU,CAACD,OAAO,IAAI,CAAC,GAAGA,OAAJ,EAAa;AAAEG,MAAAA,KAAF;AAASC,MAAAA,CAAC,EAAEV,SAAS,EAArB;AAAyBW,MAAAA,CAAC,EAAEX,SAAS;AAArC,KAAb,CAAZ,CAAV;AACD,GAFD,CAF2B,CAK3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAMY,cAAc,GAAGC,GAAG,IAAI;AAC5BN,IAAAA,UAAU,CAACD,OAAO,IAChBA,OAAO,CAACQ,GAAR,CAAY,CAACC,MAAD,EAASC,CAAT,KACVA,CAAC,KAAKH,GAAN,GACI,EAAE,GAAGE,MAAL;AAAaL,MAAAA,CAAC,EAAEV,SAAS,EAAzB;AAA6BW,MAAAA,CAAC,EAAEX,SAAS;AAAzC,KADJ,GAEIe,MAHN,CADQ,CAAV;AAOD,GARD;;AASA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAEP,SAAzB;AAAoC,IAAA,OAAO,EAAE,CAAC,WAAD,EAAc,gBAAd,EAAgC,eAAhC,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGF,OAAO,CAACQ,GAAR,CAAY,CAAC;AAAEL,IAAAA,KAAF;AAASC,IAAAA,CAAT;AAAYC,IAAAA;AAAZ,GAAD,EAAkBE,GAAlB,kBACX,oBAAC,MAAD;AACE,IAAA,cAAc,EAAED,cADlB;AAEE,IAAA,KAAK,EAAEH,KAFT;AAGE,IAAA,GAAG,EAAEI,GAHP;AAIE,IAAA,GAAG,EAAEA,GAJP;AAKE,IAAA,CAAC,EAAEH,CALL;AAME,IAAA,CAAC,EAAEC,CANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFH,CADF;AAeD,CArCD;;AAuCA,eAAeN,cAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Circle from \"./Circle\"\nimport ColorButtons from \"./ColorButtons\";\n\nfunction getRandom(min = 0, max = 100) {\n  return Math.random() * (max - min) + min;\n}\n\nconst ColoredCircles = () => {\n  const [circles, setCircles] = useState([])\n  const addCircle = (color) => {\n    setCircles(circles => [...circles, { color, x: getRandom(), y: getRandom() }])\n  }\n  // const changePosition = idx => {\n  //   setCircles(circles => {\n  //     const copy = [...circles];\n  //     copy[idx].x = getRandom();\n  //     copy[idx].y = getRandom();\n  //     return copy;\n  //   })\n  // }\n  const changePosition = idx => {\n    setCircles(circles => (\n      circles.map((circle, i) => (\n        i === idx\n          ? { ...circle, x: getRandom(), y: getRandom() }\n          : circle\n      ))\n    ))\n  }\n  return (\n    <div>\n      <ColorButtons addCircle={addCircle} options={['peachpuff', 'lightsteelblue', \"paleturquoise\"]} />\n      {circles.map(({ color, x, y }, idx) => (\n        <Circle\n          changePosition={changePosition}\n          color={color}\n          idx={idx}\n          key={idx}\n          x={x}\n          y={y} />\n      ))}\n\n    </div>\n  )\n}\n\nexport default ColoredCircles;\n\n"]},"metadata":{},"sourceType":"module"}